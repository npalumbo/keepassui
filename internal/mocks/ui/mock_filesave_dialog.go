// Code generated by MockGen. DO NOT EDIT.
// Source: ./filesave_dialog.go
//
// Generated by this command:
//
//	mockgen -destination=../mocks/ui/mock_filesave_dialog.go -source=./filesave_dialog.go
//

// Package mock_ui is a generated GoMock package.
package mock_ui

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFileSaver is a mock of FileSaver interface.
type MockFileSaver struct {
	ctrl     *gomock.Controller
	recorder *MockFileSaverMockRecorder
}

// MockFileSaverMockRecorder is the mock recorder for MockFileSaver.
type MockFileSaverMockRecorder struct {
	mock *MockFileSaver
}

// NewMockFileSaver creates a new mock instance.
func NewMockFileSaver(ctrl *gomock.Controller) *MockFileSaver {
	mock := &MockFileSaver{ctrl: ctrl}
	mock.recorder = &MockFileSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileSaver) EXPECT() *MockFileSaverMockRecorder {
	return m.recorder
}

// ShowForMasterPassword mocks base method.
func (m *MockFileSaver) ShowForMasterPassword(masterPassword string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ShowForMasterPassword", masterPassword)
}

// ShowForMasterPassword indicates an expected call of ShowForMasterPassword.
func (mr *MockFileSaverMockRecorder) ShowForMasterPassword(masterPassword any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowForMasterPassword", reflect.TypeOf((*MockFileSaver)(nil).ShowForMasterPassword), masterPassword)
}
